CREATE TABLE evento_alpr
(
    id_alpr    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    moto_id    BIGINT,
    placa_lida VARCHAR(255)                            NOT NULL,
    url_imagem VARCHAR(255),
    ts_alpr    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_eventoalpr PRIMARY KEY (id_alpr)
);

CREATE TABLE evento_wifi
(
    id_evento_wifi     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    moto_id            BIGINT,
    gateway_id_gateway BIGINT,
    rssits_evento      INTEGER,
    CONSTRAINT pk_eventowifi PRIMARY KEY (id_evento_wifi)
);

CREATE TABLE gateway
(
    id_gateway      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    mac_address     VARCHAR(255)                            NOT NULL,
    descricao       VARCHAR(255),
    localid_zona_id BIGINT,
    CONSTRAINT pk_gateway PRIMARY KEY (id_gateway)
);

CREATE TABLE moto
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    modelo   VARCHAR(255),
    placa    VARCHAR(7),
    zona_id  BIGINT,
    status   SMALLINT,
    patio_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_moto PRIMARY KEY (id)
);

CREATE TABLE patio
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome             VARCHAR(255),
    quantidade_vagas INTEGER,
    metragem_zonaa   DOUBLE PRECISION,
    metragem_zonab   DOUBLE PRECISION,
    CONSTRAINT pk_patio PRIMARY KEY (id)
);

CREATE TABLE usuario (
    id_user  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome_user VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL
);

CREATE TABLE zona
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    tipo_zona VARCHAR(255)                            NOT NULL,
    metragem  DOUBLE PRECISION,
    nome      VARCHAR(255)                            NOT NULL,
    patio_id  BIGINT                                  NOT NULL,
    CONSTRAINT pk_zona PRIMARY KEY (id)
);

ALTER TABLE gateway
    ADD CONSTRAINT uc_gateway_mac_address UNIQUE (mac_address);

ALTER TABLE moto
    ADD CONSTRAINT uc_moto_placa UNIQUE (placa);

ALTER TABLE patio
    ADD CONSTRAINT uc_patio_nome UNIQUE (nome);

ALTER TABLE zona
    ADD CONSTRAINT uq_zona_patio_tipo UNIQUE (patio_id, tipo_zona);

ALTER TABLE evento_alpr
    ADD CONSTRAINT FK_EVENTOALPR_ON_MOTO FOREIGN KEY (moto_id) REFERENCES moto (id);

ALTER TABLE evento_wifi
    ADD CONSTRAINT FK_EVENTOWIFI_ON_GATEWAY_ID_GATEWAY FOREIGN KEY (gateway_id_gateway) REFERENCES gateway (id_gateway);

ALTER TABLE evento_wifi
    ADD CONSTRAINT FK_EVENTOWIFI_ON_MOTO FOREIGN KEY (moto_id) REFERENCES moto (id);

ALTER TABLE gateway
    ADD CONSTRAINT FK_GATEWAY_ON_LOCALID_ZONA FOREIGN KEY (localid_zona_id) REFERENCES zona (id);

ALTER TABLE moto
    ADD CONSTRAINT FK_MOTO_ON_ZONA FOREIGN KEY (zona_id) REFERENCES zona (id);

ALTER TABLE moto
    ADD CONSTRAINT FK_MOTO_PATIO FOREIGN KEY (patio_id) REFERENCES patio (id);

ALTER TABLE zona
    ADD CONSTRAINT FK_ZONA_PATIO FOREIGN KEY (patio_id) REFERENCES patio (id);

-- V2__seed_data.sql
-- Seed inicial dos dados de referência (idempotente em ambiente limpo; Flyway executa uma vez)

-------------------------
-- 1) PATIOS
-------------------------
INSERT INTO patio (nome, quantidade_vagas, metragem_zonaa, metragem_zonab)
VALUES
    ('Filial São Paulo', 60, 200.0, 120.0),
    ('Filial Rio',       40, 150.0, 100.0);

-------------------------
-- 2) ZONAS (usa tipo_zona e FK patio_id)
-------------------------
INSERT INTO zona (nome, tipo_zona, metragem, patio_id)
VALUES
    ('Zona A', 'A', 200.0, (SELECT id FROM patio WHERE nome = 'Filial São Paulo')),
    ('Zona B', 'B', 120.0, (SELECT id FROM patio WHERE nome = 'Filial São Paulo'));

-------------------------
-- 3) MOTOS (placa VARCHAR(7), UNIQUE; zona_id + patio_id obrigatórios)
-- status: 0=DISPONIVEL, 1=MANUTENCAO, 2=ALUGADA
-------------------------
INSERT INTO moto (modelo, placa, status, zona_id, patio_id)
VALUES
    ('Honda CG 160',    'ABC1234', 0,
     (SELECT id FROM zona WHERE nome = 'Zona A'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona A')),
    ('Yamaha Fazer 250','XYZ5678', 1,
     (SELECT id FROM zona WHERE nome = 'Zona B'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona B')),
    ('Honda Biz 125',   'JKL9123', 1,
     (SELECT id FROM zona WHERE nome = 'Zona A'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona A')),
    ('Yamaha XTZ 150',  'QWE3456', 0,
     (SELECT id FROM zona WHERE nome = 'Zona B'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona B')),
    ('Suzuki Burgman',  'RTY7890', 0,
     (SELECT id FROM zona WHERE nome = 'Zona A'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona A')),
    ('Haojue DK 150',   'UIO4567', 0,
     (SELECT id FROM zona WHERE nome = 'Zona B'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona B')),
    ('Shineray XY 50',  'MNB3210', 2,
     (SELECT id FROM zona WHERE nome = 'Zona A'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona A')),
    ('Honda Pop 110i',  'ZXC9876', 1,
     (SELECT id FROM zona WHERE nome = 'Zona B'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona B')),
    ('Yamaha NMax 160', 'ASD6543', 1,
     (SELECT id FROM zona WHERE nome = 'Zona A'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona A')),
    ('Honda PCX 150',   'FGH8520', 2,
     (SELECT id FROM zona WHERE nome = 'Zona B'),
     (SELECT patio_id FROM zona WHERE nome = 'Zona B'));

-------------------------
-- 4) GATEWAYS (UNIQUE mac_address; FK localid_zona_id)
-------------------------
INSERT INTO gateway (mac_address, descricao, localid_zona_id)
VALUES
    ('00:11:22:33:44:55', 'Pátio Central',
     (SELECT id FROM zona WHERE nome = 'Zona A')),
    ('AA:BB:CC:DD:EE:FF', 'Manutenção Lateral',
     (SELECT id FROM zona WHERE nome = 'Zona B'));

-------------------------
-- 5) USUARIOS (id_user não é identity no v1; forneça o ID manualmente)
-------------------------
INSERT INTO usuario (nome_user, email, password, phone)
VALUES
    ('ADMIN', 'admin@example.com', 'admin', '119287883');
-------------------------
-- 6) EVENTOS WIFI (liga moto + gateway)
-------------------------
INSERT INTO evento_wifi (moto_id, gateway_id_gateway, rssits_evento)
VALUES
    (
        (SELECT id FROM moto WHERE placa = 'ABC1234'),
        (SELECT id_gateway FROM gateway WHERE mac_address = '00:11:22:33:44:55'),
        -45
    ),
    (
        (SELECT id FROM moto WHERE placa = 'XYZ5678'),
        (SELECT id_gateway FROM gateway WHERE mac_address = 'AA:BB:CC:DD:EE:FF'),
        -60
    );

-------------------------
-- 7) EVENTOS ALPR (timestamp atual)
-------------------------
INSERT INTO evento_alpr (moto_id, placa_lida, url_imagem, ts_alpr)
VALUES
    (
        (SELECT id FROM moto WHERE placa = 'ABC1234'),
        'ABC1234',
        'http://camera1/imagem.jpg',
        NOW()
    ),
    (
        (SELECT id FROM moto WHERE placa = 'XYZ5678'),
        'XYZ5678',
        'http://camera2/imagem.jpg',
        NOW()
    );

ALTER TABLE usuario
    ADD CONSTRAINT pk_usuario PRIMARY KEY (id_user);

ALTER TABLE usuario
    ALTER COLUMN email DROP NOT NULL;

ALTER TABLE patio
    ALTER COLUMN metragem_zonaa SET NOT NULL;

ALTER TABLE patio
    ALTER COLUMN metragem_zonab SET NOT NULL;

ALTER TABLE usuario
    ALTER COLUMN nome_user DROP NOT NULL;

ALTER TABLE usuario
    ALTER COLUMN password DROP NOT NULL;

ALTER TABLE usuario
ALTER
COLUMN phone TYPE VARCHAR(255) USING (phone::VARCHAR(255));

ALTER TABLE usuario
    ALTER COLUMN phone DROP NOT NULL;

ALTER TABLE patio
    ALTER COLUMN quantidade_vagas SET NOT NULL;


ALTER TABLE zona
DROP CONSTRAINT IF EXISTS "FK_ZONA_PATIO";
ALTER TABLE zona
    ADD CONSTRAINT "FK_ZONA_PATIO"
        FOREIGN KEY (patio_id) REFERENCES patio (id)
            ON DELETE CASCADE;

ALTER TABLE moto
DROP CONSTRAINT IF EXISTS "FK_MOTO_ON_ZONA";
ALTER TABLE moto
    ADD CONSTRAINT "FK_MOTO_ON_ZONA"
        FOREIGN KEY (zona_id) REFERENCES zona (id)
            ON DELETE SET NULL;

ALTER TABLE moto
DROP CONSTRAINT IF EXISTS "FK_MOTO_PATIO";
ALTER TABLE moto
    ADD CONSTRAINT "FK_MOTO_PATIO"
        FOREIGN KEY (patio_id) REFERENCES patio (id)
            ON DELETE CASCADE;

ALTER TABLE gateway
DROP CONSTRAINT IF EXISTS "FK_GATEWAY_ON_LOCALID_ZONA";
ALTER TABLE gateway
    ADD CONSTRAINT "FK_GATEWAY_ON_LOCALID_ZONA"
        FOREIGN KEY (localid_zona_id) REFERENCES zona (id)
            ON DELETE SET NULL;

-- ZONA → PATIO  (CASCADE ao apagar pátio)
ALTER TABLE zona
DROP CONSTRAINT IF EXISTS fk_zona_patio,
  DROP CONSTRAINT IF EXISTS "FK_ZONA_PATIO";
ALTER TABLE zona
    ADD CONSTRAINT fk_zona_patio
        FOREIGN KEY (patio_id) REFERENCES patio (id)
            ON DELETE CASCADE;

-- MOTO → ZONA  (ao apagar zona, a moto permanece, zona_id vira NULL)
ALTER TABLE moto
DROP CONSTRAINT IF EXISTS fk_moto_on_zona,
  DROP CONSTRAINT IF EXISTS "FK_MOTO_ON_ZONA";
ALTER TABLE moto
    ADD CONSTRAINT fk_moto_on_zona
        FOREIGN KEY (zona_id) REFERENCES zona (id)
            ON DELETE SET NULL;

-- MOTO → PATIO  (CASCADE ao apagar pátio some a moto)
ALTER TABLE moto
DROP CONSTRAINT IF EXISTS fk_moto_patio,
  DROP CONSTRAINT IF EXISTS "FK_MOTO_PATIO";
ALTER TABLE moto
    ADD CONSTRAINT fk_moto_patio
        FOREIGN KEY (patio_id) REFERENCES patio (id)
            ON DELETE CASCADE;

-- GATEWAY → ZONA  (ao apagar zona, gateway fica sem local, NULL)
ALTER TABLE gateway
DROP CONSTRAINT IF EXISTS fk_gateway_on_localid_zona,
  DROP CONSTRAINT IF EXISTS "FK_GATEWAY_ON_LOCALID_ZONA";
ALTER TABLE gateway
    ADD CONSTRAINT fk_gateway_on_localid_zona
        FOREIGN KEY (localid_zona_id) REFERENCES zona (id)
            ON DELETE SET NULL;

-- EVENTO_ALPR → MOTO  (se moto cair, manter histórico e zerar FK)
ALTER TABLE evento_alpr
DROP CONSTRAINT IF EXISTS fk_eventoalpr_on_moto,
  DROP CONSTRAINT IF EXISTS "FK_EVENTOALPR_ON_MOTO";
ALTER TABLE evento_alpr
    ADD CONSTRAINT fk_eventoalpr_on_moto
        FOREIGN KEY (moto_id) REFERENCES moto (id)
            ON DELETE SET NULL;

-- EVENTO_WIFI → MOTO  (mesma ideia: manter histórico)
ALTER TABLE evento_wifi
DROP CONSTRAINT IF EXISTS fk_eventowifi_on_moto,
  DROP CONSTRAINT IF EXISTS "FK_EVENTOWIFI_ON_MOTO";
ALTER TABLE evento_wifi
    ADD CONSTRAINT fk_eventowifi_on_moto
        FOREIGN KEY (moto_id) REFERENCES moto (id)
            ON DELETE SET NULL;

-- EVENTO_WIFI → GATEWAY  (se gateway cair pela zona, manter evento)
ALTER TABLE evento_wifi
DROP CONSTRAINT IF EXISTS fk_eventowifi_on_gateway_id_gateway,
  DROP CONSTRAINT IF EXISTS "FK_EVENTOWIFI_ON_GATEWAY_ID_GATEWAY";
ALTER TABLE evento_wifi
    ADD CONSTRAINT fk_eventowifi_on_gateway_id_gateway
        FOREIGN KEY (gateway_id_gateway) REFERENCES gateway (id_gateway)
            ON DELETE SET NULL;
